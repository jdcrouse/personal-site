{"version":3,"sources":["components/nav/NavHeader.jsx","components/nav/NavPrimaryNav.jsx","components/nav/NavBar.jsx","components/home/HomePage.jsx","components/home/HomeRoute.jsx","components/about/AboutPage.jsx","components/about/AboutRoute.jsx","components/music-writing/MusicWritingPage.jsx","components/music-writing/MusicWritingRoute.jsx","components/photography/PhotographyPage.jsx","components/photography/PhotographyRoute.jsx","Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavHeader","className","links","text","path","PrimaryNavItem","href","PrimaryNav","map","link","NavBar","HomePage","Home","exact","component","AboutPage","console","log","AboutRoute","MusicWritingPage","MusicWritingRoute","PhotographyPage","PhotographyRoute","Routes","About","MusicWriting","Photography","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAKeA,EAFG,kBAAM,qBAAKC,UAAU,aAAf,2BCDlBC,EAAQ,CACZ,CAAEC,KAAM,QAASC,KAAM,UACvB,CAAED,KAAM,gBAAiBC,KAAM,kBAC/B,CAAED,KAAM,cAAeC,KAAM,iBAGzBC,EAAiB,SAAC,GAAD,IAAGF,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACrB,oBAAIH,UAAU,oBAAd,SACE,mBAAGA,UAAU,oBAAoBK,KAAMF,EAAvC,SACGD,OAeQI,EAVI,kBACjB,qBAAKN,UAAU,cAAf,SACE,oBAAIA,UAAU,oBAAd,SACGC,EAAMM,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAAgBN,KAAMM,EAAKN,KAAMC,KAAMK,EAAKL,MAAWK,EAAKN,cCRrDO,EARA,WACb,OACE,yBAAQT,UAAU,MAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCPSU,EADE,kBAAM,wCCKRC,EAFF,cAAC,IAAD,CAAOC,OAAK,EAACT,KAAK,IAAIU,UAAWH,ICC/BI,EAJG,WAEhB,OADAC,QAAQC,IAAI,SACL,4CCGMC,EAFI,cAAC,IAAD,CAAOd,KAAK,SAASU,UAAWC,ICApCI,EAHU,WACvB,OAAO,iDCMMC,EAHb,cAAC,IAAD,CAAOhB,KAAK,iBAAiBU,UAAWK,ICD3BE,EAHS,WACtB,OAAO,+CCMMC,EAHb,cAAC,IAAD,CAAOlB,KAAK,eAAeU,UAAWO,ICgBzBE,EAZA,kBACb,cAAC,IAAD,UACE,eAAC,IAAD,CAAOnB,KAAK,IAAZ,UACE,cAAC,EAAD,IACCQ,EACAY,EACAC,EACAC,QCPQC,G,MAJH,WACV,OAAO,cAAC,EAAD,MCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.61b32e0b.chunk.js","sourcesContent":["import \"./Nav.css\";\n\n// TODO I want this to link to home without looking like a link\nconst NavHeader = () => <div className=\"Nav-header\">Jason Crouse</div>;\n\nexport default NavHeader;\n","import \"./Nav.css\";\n\nconst links = [\n  { text: \"About\", path: \"/about\" },\n  { text: \"Music writing\", path: \"/music-writing\" },\n  { text: \"Photography\", path: \"/photography\" },\n];\n\nconst PrimaryNavItem = ({ text, path }) => (\n  <li className=\"primary-nav__item\">\n    <a className=\"primary-nav__link\" href={path}>\n      {text}\n    </a>\n  </li>\n);\n\nconst PrimaryNav = () => (\n  <nav className=\"primary-nav\">\n    <ul className=\"primary-nav__list\">\n      {links.map((link) => (\n        <PrimaryNavItem text={link.text} path={link.path} key={link.text} />\n      ))}\n    </ul>\n  </nav>\n);\n\nexport default PrimaryNav;\n","import NavHeader from \"./NavHeader\";\nimport PrimaryNav from \"./NavPrimaryNav\";\nimport \"./Nav.css\";\n\nconst NavBar = () => {\n  return (\n    <header className=\"Nav\">\n      <NavHeader />\n      <PrimaryNav />\n    </header>\n  );\n};\nexport default NavBar;\n","const HomePage = () => <div>Home</div>;\nexport default HomePage;\n","import { Route } from \"react-router-dom\";\nimport HomePage from \"./HomePage\";\n\nconst Home = <Route exact path=\"/\" component={HomePage} />;\n\nexport default Home;\n","const AboutPage = () => {\n  console.log(\"ABOUT\");\n  return <div>About me</div>;\n};\nexport default AboutPage;\n","import { Route } from \"react-router-dom\";\nimport AboutPage from \"./AboutPage\";\n\nconst AboutRoute = <Route path=\"/about\" component={AboutPage} />;\n\nexport default AboutRoute;\n","const MusicWritingPage = () => {\n  return <div>Music writing</div>;\n};\nexport default MusicWritingPage;\n","import { Route } from \"react-router-dom\";\nimport MusicWritingPage from \"./MusicWritingPage\";\n\nconst MusicWritingRoute = (\n  <Route path=\"/music-writing\" component={MusicWritingPage} />\n);\n\nexport default MusicWritingRoute;\n","const PhotographyPage = () => {\n  return <div>Photography</div>;\n};\nexport default PhotographyPage;\n","import { Route } from \"react-router-dom\";\nimport PhotographyPage from \"./PhotographyPage\";\n\nconst PhotographyRoute = (\n  <Route path=\"/photography\" component={PhotographyPage} />\n);\n\nexport default PhotographyRoute;\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport NavBar from \"./components/nav/NavBar\";\nimport Home from \"./components/home/HomeRoute\";\nimport About from \"./components/about/AboutRoute\";\nimport MusicWriting from \"./components/music-writing/MusicWritingRoute\";\nimport Photography from \"./components/photography/PhotographyRoute\";\n\nconst Routes = () => (\n  <Router>\n    <Route path=\"/\">\n      <NavBar />\n      {Home}\n      {About}\n      {MusicWriting}\n      {Photography}\n    </Route>\n  </Router>\n);\n\nexport default Routes;\n","import Routes from \"./Routes\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return <Routes />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}